import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
from sklearn.metrics import r2_score

# Load the CSV file with the correct delimiter
file_path = 'AE-341-1V.csv'  # Replace with your file path
data = pd.read_csv(file_path, delimiter=';')

# Calculate the mean power as before
mean_power = data[['Unnamed: 2', 'Unnamed: 3', 'power [mW]']].mean(axis=1)

# Define a power function
def power_func(x, a, b):
    return a * np.power(x,b)

# Fit the power function
popt_power, _ = curve_fit(power_func, data['Voltage [V]'], mean_power)

# Extract the coefficients
a, b = popt_power

# Print the equation
print(f"The fitting equation is: y = {a:.4f} * np.power(x,{b:.4f}) ")

# Plotting the data and fitted function
fitted_power = power_func(data['Voltage [V]'], *popt_power)

plt.figure(figsize=(10, 6))
plt.errorbar(data['Voltage [V]'], mean_power, 
             yerr=[mean_power - data[['Unnamed: 2', 'Unnamed: 3', 'power [mW]']].min(axis=1), 
                   data[['Unnamed: 2', 'Unnamed: 3', 'power [mW]']].max(axis=1) - mean_power], 
             fmt='o', capsize=5, color='b', markersize=4, label='Data with Span')

plt.plot(data['Voltage [V]'], fitted_power, label=f'Power funct fit (RÂ²={r2_score(mean_power, fitted_power):.5f})', color='green')

# Adding titles and labels
plt.title('Voltage vs Power Span with Fitted Function', fontsize=16)
plt.xlabel('Voltage [V]', fontsize=14)
plt.ylabel('Power [mW]', fontsize=14)

# Adjusting the plot range (optional)
plt.xlim([0, 1.1])  # Example range for the x-axis, adjust as needed
plt.ylim([0, 360])    # Example range for the y-axis, adjust as needed

plt.legend()
plt.grid(False)
plt.show()
